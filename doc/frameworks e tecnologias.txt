=================== DEFINIÇÃO DE ARQUITETURA E TECNOLOGIA PARA O PROJETO CAT ===================

Flex
	+- Como modularizar o frontend da aplicação em Flex de forma a carregar sob demanda?
	+- Como modularizar de forma a descarregar oque não está sendo usado?

	+- Como o frontend irá se comunicar com a camada logo abaixo?

	+- http://www.igorcosta.com/blog/?p=541 (CEP, CPF, CNPJ)
	+- Full Lazy Load para BlazeDS – http://code.google.com/p/dphibernate/\
	+- http://mate.asfusion.com/ -> MVC (Controller?)
	+- Log4Fx (http://www.myflex.org/#products)
        +- Spring-Flex - Para simplificar o mapeamento dos "Destination" e não ter uma explosão no .XML do Flex


** PERSISTÊNICIA **

JPA2, EJB 3.1
	+- Colocar regras de negócio dentro da entidade? 
		+- Acredito que não, pois seria um overhead a mais na transição dos objetos pela rede.
		+- Acredito que não, pois como ficaria os métodos que realizam operações no banco de dados, se o objeto esta remoto?

AutoDAO 
	+- http://autodao.sourceforge.net/
	+- http://redmine.synyx.org/projects/show/hades
	+- http://grepo.codehaus.org/
	+- http://code.google.com/p/polyforms/
	+- http://www.wideplay.com/dynamicfinders

			+- A menos que se crie uma interface que o permita, de forma a reconhecer se o objeto esta no container e quando esta fora.


Joda  - para simplificar calculos de datas



=================== TESTES ===================
TESTES DE NEGÓCIO

JUnit          -> teste unitário
JUnit + DBUnit -> testes funcionais (verificar como adotar a "Estratégia Objective" de testes)

TESTES DE TELA
FlexUnit       -> testes flex da adobe
Fluint         -> melhor que FlexUnit, suporta AIR, suporte assíncrono robusto, sequenciamento de teste, testa componentes UI. (code.google.com/p/fluint) 
FunFx          -> não esta maduro ainda, teste funcional, escrito em Ruby (files.rubyforge.vm.bytemark.co.uk/funfx)


DEBUG
FxSpy          -> Permite inspecionar seus componentes e ver como estão configuradas ao mesmo tempo que permite manipulalas
(code.google.com/p/fxspy)